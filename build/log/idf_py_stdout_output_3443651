[1/9] Performing build step for 'bootloader'
[1/1] cd /home/tux/projects/tautuk_esp32s3_core/build/bootloader/esp-idf/esptool_py && /home/tux/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/tux/esp/v5.1.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/tux/projects/tautuk_esp32s3_core/build/bootloader/bootloader.bin
Bootloader binary size 0x51c0 bytes. 0x2e40 bytes (36%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/MQLibrary.c.obj
/home/tux/projects/tautuk_esp32s3_core/main/MQLibrary.c:100:13: warning: 'app_adc_calibration_deinit' defined but not used [-Wunused-function]
  100 | static void app_adc_calibration_deinit(adc_cali_handle_t handle)
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable hello_world.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/tux/projects/tautuk_esp32s3_core/build/hello_world.bin
[9/9] cd /home/tux/projects/tautuk_esp32s3_core/build/esp-idf/esptool_py && /home/tux/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/tux/esp/v5.1.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/tux/projects/tautuk_esp32s3_core/build/partition_table/partition-table.bin /home/tux/projects/tautuk_esp32s3_core/build/hello_world.bin
hello_world.bin binary size 0x37d30 bytes. Smallest app partition is 0x100000 bytes. 0xc82d0 bytes (78%) free.
